Copyright (c) 2005 Juan Pablo D. Borgna <jpborgna en inti gov ar>
Copyright (c) 2006-2008 Salvador E. Tropea <salvador en inti gov ar>
Copyright (c) 2005-2008 Instituto Nacional de Tecnología Industrial
Para la miniuart2:
Author : Philippe CARTON     philippe.carton2@libertysurf.fr
Copyright (c) notice: This core adheres to the GNU public license

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; version 2.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 02111-1307, USA

Dependencias: bakalint (Opcional)
              xtracth (Generador de .h y .inc)
              wb_counter.counters (Para la versión con baudrate generator)
              mems.devices (Para la versión con FIFO)
  Para los bancos de pruebas:
              c.stdio_h (Librería de C en VHDL)
              wb_handler.WishboneTB (Wishbone Handler)
              Wishbone Builder
              ghdl

  Esta es la miniuart 2 que esta publicada en OpenCores. Con algunos agregados
y correcciones.
  Los cores incluidos son una UART con baurate fijo, otra con baudrate
variable y una última con FIFO. Todas compatibles con Wishbone.
  La documentación original se encuentra en el directorio doc. Para mayor
información sobre el generador de baudrate consulte la documentación del core
wb_counter.
  Si se desea simular con GHDL basta con usar make.


Nota sobre cambios en el core FIFO:
----------------------------------

Si se utilizan memorias FIFOs de la biblioteca "mems", tener en cuenta que se
ha implementado un cambio en el comportamiento de la señal "avail_o" (dato
disponible), retrasando un ciclo de reloj su pasaje a '1'. La compatibilidad
con el core UART_F ha sido probada satisfactoriamente, aunque no de manera
intensiva.
Para más información, consultar ( ../mems/FIFO.txt ).


Cores del package UART:
-----------------------

UART_C       Rx+Tx+Fixed Baudrate(optional)+Wishbone
UART_F       Rx+Tx+Fixed Baudrate(optional)+Wishbone+FIFO(mems.devices)
UART_WB      Rx+Tx+Programmable Baudrate(wb_counter.counters)+Wishbone
RxUnit       UART Rx core
TxUnit       UART Tx core
Counter      Fixed baudrate generator
Synchroniser Sincroniza una señal con un clock dado


Registros:
----------

Son de 8 bits. Este es un resumen y su objetivo es mostrar las diferencias
con la documentación.

Dirección | Modo | Nombre       | Descripción
-----------------------------------------------------------------------------
    0     |   R  | UART_RX      | Receive Register
-----------------------------------------------------------------------------
    0     |   W  | UART_TX      | Transmit Register
-----------------------------------------------------------------------------
    1     |   R  | UART_ST      | Status Register
          |      |              | bit 1: Byte received (1=received)
          |      |              | bit 0: Ready to transmit (1=ready)
-----------------------------------------------------------------------------
    2     |   W  | UART_PRER_LO | Clock Prescaler Low (only for UART_WB)
-----------------------------------------------------------------------------
    3     |   W  | UART_PRER_HI | Clock Prescaler High (only for UART_WB)
-----------------------------------------------------------------------------


Fuentes:
--------

Rxunit.vhdl        RxUnit
Txunit.vhdl        TxUnit
miniuart.vhdl      UART_C
miniuart_fifo.vhdl UART_F
miniuart_pkg.vhdl  Declarations for UART package
miniuart_wb.vhdl   UART_WB
utils.vhdl         Counter, Synchroniser


Testbenches:
------------

testbench/miniuart_ebr_tb.vhdl   UART_C+external Wishbone baudrate generator
testbench/miniuart_fifo_tb.vhdl  UART_F
testbench/miniuart_tb.vhdl       UART_C
testbench/miniuart_wb_tb.vhdl    UART_WB


Generics:
---------

UART_C y UART_F utilizan un generador de baudrate fijo controlado por el
siguiente generic:
BRDIVISOR: integer range 0 to 65535:=1; -- Baud rate divisor
Para deshabilitarlo basta con que sea 1 e ingresar el baurate por br_clk_i.

